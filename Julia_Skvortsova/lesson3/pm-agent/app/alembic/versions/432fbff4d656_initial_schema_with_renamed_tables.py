"""initial schema with renamed tables

Revision ID: 432fbff4d656
Revises:
Create Date: 2025-08-16 15:45:10.757669

"""

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = "432fbff4d656"
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "approvals",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column(
            "action_type",
            sa.Enum(
                "CREATE_YOUTRACK_ISSUE",
                "ADD_YOUTRACK_COMMENT",
                "POST_SLACK",
                "CREATE_PR",
                "SEARCH_CODE",
                name="systemactiontype",
            ),
            nullable=False,
        ),
        sa.Column("payload_json", sa.JSON(), nullable=False),
        sa.Column(
            "risk", sa.Enum("LOW", "MEDIUM", "HIGH", name="risklevel"), nullable=False
        ),
        sa.Column(
            "status",
            sa.Enum(
                "NOT_REQUIRED",
                "PENDING",
                "APPROVED",
                "REJECTED",
                "NEEDS_REVISION",
                "EXECUTED",
                "EXPIRED",
                name="approvalstatus",
            ),
            nullable=False,
        ),
        sa.Column("reviewer_whitelist", sa.ARRAY(sa.String()), nullable=True),
        sa.Column("slack_channel", sa.String(length=50), nullable=True),
        sa.Column("slack_ts", sa.String(length=50), nullable=True),
        sa.Column("slack_message_url", sa.Text(), nullable=True),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.Column("expires_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("decided_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("decided_by", sa.String(length=100), nullable=True),
        sa.Column("reason", sa.Text(), nullable=True),
        sa.Column("executed_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("execution_result", sa.JSON(), nullable=True),
        sa.Column("execution_error", sa.Text(), nullable=True),
        sa.Column("langfuse_trace_id", sa.String(length=255), nullable=True),
        sa.Column("related_entity_id", sa.UUID(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        "idx_approvals_risk_status", "approvals", ["risk", "status"], unique=False
    )
    op.create_index(
        "idx_approvals_status_created",
        "approvals",
        ["status", "created_at"],
        unique=False,
    )
    op.create_index(
        op.f("ix_approvals_action_type"), "approvals", ["action_type"], unique=False
    )
    op.create_index(
        op.f("ix_approvals_langfuse_trace_id"),
        "approvals",
        ["langfuse_trace_id"],
        unique=False,
    )
    op.create_index(op.f("ix_approvals_status"), "approvals", ["status"], unique=False)
    op.create_table(
        "guardrail_logs",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("approval_id", sa.UUID(), nullable=True),
        sa.Column("check_type", sa.String(length=50), nullable=True),
        sa.Column("rule_name", sa.String(length=100), nullable=True),
        sa.Column("passed", sa.Boolean(), nullable=False),
        sa.Column("details", sa.JSON(), nullable=True),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.ForeignKeyConstraint(["approval_id"], ["approvals.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        "idx_guardrail_logs_approval_passed",
        "guardrail_logs",
        ["approval_id", "passed"],
        unique=False,
    )
    op.create_table(
        "feature_research_sessions",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("session_id", sa.String(length=255), nullable=False),
        sa.Column("review_id", sa.UUID(), nullable=True),
        sa.Column("feature_description", sa.Text(), nullable=False),
        sa.Column("project", sa.String(length=100), nullable=False),
        sa.Column("competitors_list", sa.ARRAY(sa.String()), nullable=False),
        sa.Column("max_search_queries", sa.Integer(), nullable=True),
        sa.Column("require_citations", sa.Boolean(), nullable=True),
        sa.Column("status", sa.String(length=50), nullable=False),
        sa.Column("current_stage", sa.String(length=50), nullable=True),
        sa.Column("total_competitors_analyzed", sa.Integer(), nullable=True),
        sa.Column("total_evidence_urls", sa.Integer(), nullable=True),
        sa.Column("research_quality_score", sa.Float(), nullable=True),
        sa.Column("feature_spec_json", sa.JSON(), nullable=True),
        sa.Column("competitor_matrix_json", sa.JSON(), nullable=True),
        sa.Column("final_report_json", sa.JSON(), nullable=True),
        sa.Column("requires_pm_approval", sa.Boolean(), nullable=True),
        sa.Column("approval_status", sa.String(length=50), nullable=True),
        sa.Column("approved_by", sa.String(length=100), nullable=True),
        sa.Column("approved_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("processing_time_ms", sa.Integer(), nullable=True),
        sa.Column("agent_turns_used", sa.Integer(), nullable=True),
        sa.Column("web_searches_performed", sa.Integer(), nullable=True),
        sa.Column(
            "started_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.Column("completed_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.Column("langfuse_trace_id", sa.String(length=255), nullable=True),
        sa.ForeignKeyConstraint(["review_id"], ["reviews.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        "idx_feature_sessions_approval_status",
        "feature_research_sessions",
        ["approval_status"],
        unique=False,
    )
    op.create_index(
        "idx_feature_sessions_project_completed",
        "feature_research_sessions",
        ["project", "completed_at"],
        unique=False,
    )
    op.create_index(
        "idx_feature_sessions_review_started",
        "feature_research_sessions",
        ["review_id", "started_at"],
        unique=False,
    )
    op.create_index(
        "idx_feature_sessions_status",
        "feature_research_sessions",
        ["status"],
        unique=False,
    )
    op.create_index(
        op.f("ix_feature_research_sessions_langfuse_trace_id"),
        "feature_research_sessions",
        ["langfuse_trace_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_feature_research_sessions_session_id"),
        "feature_research_sessions",
        ["session_id"],
        unique=True,
    )
    op.create_table(
        "issue_search_sessions",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("session_id", sa.String(length=255), nullable=False),
        sa.Column("review_id", sa.UUID(), nullable=True),
        sa.Column("project", sa.String(length=100), nullable=False),
        sa.Column("bug_report_text", sa.Text(), nullable=False),
        sa.Column("max_candidates_to_analyze", sa.Integer(), nullable=True),
        sa.Column("similarity_threshold", sa.Float(), nullable=True),
        sa.Column("duplicate_found", sa.Boolean(), nullable=True),
        sa.Column("selected_duplicate_issue_id", sa.String(length=50), nullable=True),
        sa.Column("final_action", sa.String(length=50), nullable=True),
        sa.Column("total_api_calls", sa.Integer(), nullable=True),
        sa.Column("total_processing_time_ms", sa.Integer(), nullable=True),
        sa.Column("total_candidates_found", sa.Integer(), nullable=True),
        sa.Column("candidates_analyzed_in_detail", sa.Integer(), nullable=True),
        sa.Column(
            "started_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.Column("completed_at", sa.DateTime(timezone=True), nullable=True),
        sa.ForeignKeyConstraint(["review_id"], ["reviews.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        "idx_dup_sessions_project_completed",
        "issue_search_sessions",
        ["project", "completed_at"],
        unique=False,
    )
    op.create_index(
        "idx_dup_sessions_review_started",
        "issue_search_sessions",
        ["review_id", "started_at"],
        unique=False,
    )
    op.create_index(
        op.f("ix_issue_search_sessions_session_id"),
        "issue_search_sessions",
        ["session_id"],
        unique=True,
    )
    op.create_table(
        "competitor_analysis",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("session_id", sa.UUID(), nullable=True),
        sa.Column("competitor", sa.String(length=100), nullable=False),
        sa.Column("feature", sa.String(length=255), nullable=False),
        sa.Column("has_feature", sa.Boolean(), nullable=False),
        sa.Column("implementation_details", sa.Text(), nullable=True),
        sa.Column("pricing_tier", sa.String(length=100), nullable=True),
        sa.Column("limitations", sa.ARRAY(sa.String()), nullable=True),
        sa.Column("strengths", sa.ARRAY(sa.String()), nullable=True),
        sa.Column("last_updated", sa.String(length=50), nullable=True),
        sa.Column("proof_urls", sa.ARRAY(sa.String()), nullable=False),
        sa.Column("analysis_notes", sa.Text(), nullable=True),
        sa.Column("confidence_score", sa.Float(), nullable=True),
        sa.Column(
            "analyzed_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.ForeignKeyConstraint(
            ["session_id"], ["feature_research_sessions.id"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint(
            "session_id", "competitor", "feature", name="uq_session_competitor_feature"
        ),
    )
    op.create_index(
        "idx_feature_analysis_has_feature",
        "competitor_analysis",
        ["has_feature"],
        unique=False,
    )
    op.create_index(
        "idx_feature_analysis_session_competitor",
        "competitor_analysis",
        ["session_id", "competitor"],
        unique=False,
    )
    op.create_table(
        "feature_research_progress",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("session_id", sa.UUID(), nullable=True),
        sa.Column(
            "stage",
            sa.Enum(
                "PLANNING",
                "RESEARCH",
                "ANALYSIS",
                "SPECIFICATION",
                name="featureresearchstage",
            ),
            nullable=False,
        ),
        sa.Column("agent_name", sa.String(length=100), nullable=False),
        sa.Column(
            "started_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.Column("completed_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("success", sa.Boolean(), nullable=True),
        sa.Column("error_message", sa.Text(), nullable=True),
        sa.Column("items_processed", sa.Integer(), nullable=True),
        sa.Column("output_size_tokens", sa.Integer(), nullable=True),
        sa.Column("stage_metadata", sa.JSON(), nullable=True),
        sa.ForeignKeyConstraint(
            ["session_id"], ["feature_research_sessions.id"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        "idx_feature_stages_session_stage",
        "feature_research_progress",
        ["session_id", "stage"],
        unique=False,
    )
    op.create_index(
        "idx_feature_stages_started",
        "feature_research_progress",
        ["started_at"],
        unique=False,
    )
    op.create_table(
        "fix_suggestions",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("ticket_id", sa.UUID(), nullable=True),
        sa.Column("file_path", sa.Text(), nullable=False),
        sa.Column("snippet", sa.Text(), nullable=True),
        sa.Column("diff_md", sa.Text(), nullable=False),
        sa.Column("confidence", sa.Float(), nullable=True),
        sa.Column("line_start", sa.Integer(), nullable=True),
        sa.Column("line_end", sa.Integer(), nullable=True),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.ForeignKeyConstraint(["ticket_id"], ["tickets.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "issue_duplicate_candidates",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("session_id", sa.UUID(), nullable=True),
        sa.Column("issue_id", sa.String(length=50), nullable=False),
        sa.Column("title", sa.Text(), nullable=True),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column("created_date", sa.DateTime(timezone=True), nullable=True),
        sa.Column("title_similarity_score", sa.Float(), nullable=True),
        sa.Column("keyword_overlap_score", sa.Float(), nullable=True),
        sa.Column("recency_score", sa.Float(), nullable=True),
        sa.Column("pre_filter_score", sa.Float(), nullable=True),
        sa.Column("detailed_analysis_completed", sa.Boolean(), nullable=True),
        sa.Column("semantic_similarity_score", sa.Float(), nullable=True),
        sa.Column("problem_similarity_score", sa.Float(), nullable=True),
        sa.Column("context_similarity_score", sa.Float(), nullable=True),
        sa.Column("impact_similarity_score", sa.Float(), nullable=True),
        sa.Column("final_similarity_score", sa.Float(), nullable=True),
        sa.Column("duplicate_confidence", sa.Float(), nullable=True),
        sa.Column("analysis_notes", sa.Text(), nullable=True),
        sa.Column("selected_as_duplicate", sa.Boolean(), nullable=True),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.Column("analyzed_at", sa.DateTime(timezone=True), nullable=True),
        sa.ForeignKeyConstraint(
            ["session_id"], ["issue_search_sessions.id"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        "idx_dup_candidates_selected",
        "issue_duplicate_candidates",
        ["session_id", "selected_as_duplicate"],
        unique=False,
    )
    op.create_index(
        "idx_dup_candidates_session_score",
        "issue_duplicate_candidates",
        ["session_id", "final_similarity_score"],
        unique=False,
    )
    op.create_table(
        "issue_search_progress",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("session_id", sa.UUID(), nullable=True),
        sa.Column(
            "stage",
            sa.Enum(
                "MULTI_QUERY_SEARCH",
                "PRE_FILTERING",
                "DETAILED_ANALYSIS",
                "FINAL_DECISION",
                name="bugduplicatesearchstage",
            ),
            nullable=False,
        ),
        sa.Column(
            "started_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.Column("completed_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("success", sa.Boolean(), nullable=True),
        sa.Column("error_message", sa.Text(), nullable=True),
        sa.Column("items_processed", sa.Integer(), nullable=True),
        sa.Column("items_remaining", sa.Integer(), nullable=True),
        sa.Column("stage_metadata", sa.JSON(), nullable=True),
        sa.ForeignKeyConstraint(
            ["session_id"], ["issue_search_sessions.id"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        "idx_dup_stages_session_stage",
        "issue_search_progress",
        ["session_id", "stage"],
        unique=False,
    )
    op.create_index(
        "idx_dup_stages_started", "issue_search_progress", ["started_at"], unique=False
    )
    op.create_table(
        "issue_search_queries",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("session_id", sa.UUID(), nullable=True),
        sa.Column("query", sa.Text(), nullable=False),
        sa.Column("search_type", sa.String(length=50), nullable=True),
        sa.Column("results_count", sa.Integer(), nullable=True),
        sa.Column("execution_time_ms", sa.Integer(), nullable=True),
        sa.Column(
            "executed_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.ForeignKeyConstraint(
            ["session_id"], ["issue_search_sessions.id"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        "idx_dup_queries_session_executed",
        "issue_search_queries",
        ["session_id", "executed_at"],
        unique=False,
    )
    op.create_table(
        "web_research_findings",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("session_id", sa.UUID(), nullable=True),
        sa.Column("competitor", sa.String(length=100), nullable=False),
        sa.Column("feature", sa.String(length=255), nullable=False),
        sa.Column("claim", sa.Text(), nullable=False),
        sa.Column("evidence_url", sa.Text(), nullable=False),
        sa.Column("evidence_snippet", sa.Text(), nullable=False),
        sa.Column(
            "confidence",
            sa.Enum("LOW", "MEDIUM", "HIGH", name="researchconfidence"),
            nullable=False,
        ),
        sa.Column("is_official_source", sa.Boolean(), nullable=True),
        sa.Column("date_found", sa.String(length=50), nullable=True),
        sa.Column("search_query_used", sa.Text(), nullable=True),
        sa.Column("found_by_agent", sa.String(length=100), nullable=True),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.ForeignKeyConstraint(
            ["session_id"], ["feature_research_sessions.id"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        "idx_feature_findings_confidence",
        "web_research_findings",
        ["confidence"],
        unique=False,
    )
    op.create_index(
        "idx_feature_findings_official",
        "web_research_findings",
        ["is_official_source"],
        unique=False,
    )
    op.create_index(
        "idx_feature_findings_session_competitor",
        "web_research_findings",
        ["session_id", "competitor"],
        unique=False,
    )
    op.create_table(
        "web_search_queries",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("session_id", sa.UUID(), nullable=True),
        sa.Column("query", sa.Text(), nullable=False),
        sa.Column("search_type", sa.String(length=50), nullable=True),
        sa.Column("target_competitor", sa.String(length=100), nullable=True),
        sa.Column("executed_by_agent", sa.String(length=100), nullable=True),
        sa.Column("results_count", sa.Integer(), nullable=True),
        sa.Column("findings_extracted", sa.Integer(), nullable=True),
        sa.Column("execution_time_ms", sa.Integer(), nullable=True),
        sa.Column("success", sa.Boolean(), nullable=True),
        sa.Column("error_message", sa.Text(), nullable=True),
        sa.Column(
            "executed_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.ForeignKeyConstraint(
            ["session_id"], ["feature_research_sessions.id"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        "idx_feature_queries_session_executed",
        "web_search_queries",
        ["session_id", "executed_at"],
        unique=False,
    )
    op.create_index(
        "idx_feature_queries_success", "web_search_queries", ["success"], unique=False
    )
    op.alter_column(
        "feature_reports", "review_id", existing_type=sa.UUID(), nullable=True
    )
    op.alter_column("reviews", "run_id", existing_type=sa.UUID(), nullable=True)
    op.alter_column("tickets", "review_id", existing_type=sa.UUID(), nullable=True)
    op.drop_index(op.f("ix_tickets_issue_id"), table_name="tickets")
    op.create_unique_constraint(None, "tickets", ["issue_id"])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, "tickets", type_="unique")
    op.create_index(op.f("ix_tickets_issue_id"), "tickets", ["issue_id"], unique=True)
    op.alter_column("tickets", "review_id", existing_type=sa.UUID(), nullable=False)
    op.alter_column("reviews", "run_id", existing_type=sa.UUID(), nullable=False)
    op.alter_column(
        "feature_reports", "review_id", existing_type=sa.UUID(), nullable=False
    )
    op.drop_index("idx_feature_queries_success", table_name="web_search_queries")
    op.drop_index(
        "idx_feature_queries_session_executed", table_name="web_search_queries"
    )
    op.drop_table("web_search_queries")
    op.drop_index(
        "idx_feature_findings_session_competitor", table_name="web_research_findings"
    )
    op.drop_index("idx_feature_findings_official", table_name="web_research_findings")
    op.drop_index("idx_feature_findings_confidence", table_name="web_research_findings")
    op.drop_table("web_research_findings")
    op.drop_index("idx_dup_queries_session_executed", table_name="issue_search_queries")
    op.drop_table("issue_search_queries")
    op.drop_index("idx_dup_stages_started", table_name="issue_search_progress")
    op.drop_index("idx_dup_stages_session_stage", table_name="issue_search_progress")
    op.drop_table("issue_search_progress")
    op.drop_index(
        "idx_dup_candidates_session_score", table_name="issue_duplicate_candidates"
    )
    op.drop_index(
        "idx_dup_candidates_selected", table_name="issue_duplicate_candidates"
    )
    op.drop_table("issue_duplicate_candidates")
    op.drop_table("fix_suggestions")
    op.drop_index("idx_feature_stages_started", table_name="feature_research_progress")
    op.drop_index(
        "idx_feature_stages_session_stage", table_name="feature_research_progress"
    )
    op.drop_table("feature_research_progress")
    op.drop_index(
        "idx_feature_analysis_session_competitor", table_name="competitor_analysis"
    )
    op.drop_index("idx_feature_analysis_has_feature", table_name="competitor_analysis")
    op.drop_table("competitor_analysis")
    op.drop_index(
        op.f("ix_issue_search_sessions_session_id"), table_name="issue_search_sessions"
    )
    op.drop_index("idx_dup_sessions_review_started", table_name="issue_search_sessions")
    op.drop_index(
        "idx_dup_sessions_project_completed", table_name="issue_search_sessions"
    )
    op.drop_table("issue_search_sessions")
    op.drop_index(
        op.f("ix_feature_research_sessions_session_id"),
        table_name="feature_research_sessions",
    )
    op.drop_index(
        op.f("ix_feature_research_sessions_langfuse_trace_id"),
        table_name="feature_research_sessions",
    )
    op.drop_index("idx_feature_sessions_status", table_name="feature_research_sessions")
    op.drop_index(
        "idx_feature_sessions_review_started", table_name="feature_research_sessions"
    )
    op.drop_index(
        "idx_feature_sessions_project_completed", table_name="feature_research_sessions"
    )
    op.drop_index(
        "idx_feature_sessions_approval_status", table_name="feature_research_sessions"
    )
    op.drop_table("feature_research_sessions")
    op.drop_index("idx_guardrail_logs_approval_passed", table_name="guardrail_logs")
    op.drop_table("guardrail_logs")
    op.drop_index(op.f("ix_approvals_status"), table_name="approvals")
    op.drop_index(op.f("ix_approvals_langfuse_trace_id"), table_name="approvals")
    op.drop_index(op.f("ix_approvals_action_type"), table_name="approvals")
    op.drop_index("idx_approvals_status_created", table_name="approvals")
    op.drop_index("idx_approvals_risk_status", table_name="approvals")
    op.drop_table("approvals")
    # ### end Alembic commands ###
